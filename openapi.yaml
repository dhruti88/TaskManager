openapi: 3.0.0
info:
  title: Task Manager API
  description: API for managing users and their tasks.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local development server
tags:
  - name: Users
    description: User-related endpoints
  - name: Tasks
    description: Task-related endpoints
paths:
  /users/hello:
    get:
      tags:
        - Users
      summary: Check if user routes are working
      responses:
        '200':
          description: Routes are functional
          content:
            text/plain:
              schema:
                type: string
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Error occurred during registration
  /users/login:
    post:
      tags:
        - Users
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Logged in successfully
        '400':
          description: Login failed
  /tasks/test:
    get:
      tags:
        - Tasks
      summary: Check if task routes are working
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Routes are functional
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks for the logged-in user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  count:
                    type: integer
                  message:
                    type: string
    post:
      tags:
        - Tasks
      summary: Create a new task
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get a specific task by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task fetched successfully
        '404':
          description: Task not found
    patch:
      tags:
        - Tasks
      summary: Update a task by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Task updated successfully
        '400':
          description: Invalid updates
        '404':
          description: Task not found
    delete:
      tags:
        - Tasks
      summary: Delete a task by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully
        '404':
          description: Task not found
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Task:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
        owner:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
